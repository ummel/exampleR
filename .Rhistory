# Load a package
library(tidyverse)
# Fit lm model to mtcars dataset
model <- lm(mpg ~ cyl + hp, data = mtcars)
# Save model object to disk as .rds object
write_rds(model, "data/Model object.rds")
.libPaths()
snapshot()
packrat::snapshot()
?gbm
install.packages("gbm")
?gbm
library(gbm)
status)()
status()
packrat::status()
?gbm
# Fit lm model to mtcars dataset
model <- gbm(mpg ~ cyl + hp, data = mtcars)
dim(mtcars)
# Create dataset using the ?gbm example
N <- 1000
X1 <- runif(N)
X2 <- 2*runif(N)
X3 <- ordered(sample(letters[1:4],N,replace=TRUE),levels=letters[4:1])
X4 <- factor(sample(letters[1:6],N,replace=TRUE))
X5 <- factor(sample(letters[1:3],N,replace=TRUE))
X6 <- 3*runif(N)
mu <- c(-1,0,1,2)[as.numeric(X3)]
# Create dataset using the ?gbm example
N <- 1000
X1 <- runif(N)
X2 <- 2*runif(N)
X3 <- ordered(sample(letters[1:4],N,replace=TRUE),levels=letters[4:1])
X4 <- factor(sample(letters[1:6],N,replace=TRUE))
X5 <- factor(sample(letters[1:3],N,replace=TRUE))
X6 <- 3*runif(N)
mu <- c(-1,0,1,2)[as.numeric(X3)]
SNR <- 10 # signal-to-noise ratio
Y <- X1**1.5 + 2 * (X2**.5) + mu
sigma <- sqrt(var(Y)/SNR)
Y <- Y + rnorm(N,0,sigma)
X1[sample(1:N,size=500)] <- NA
X4[sample(1:N,size=300)] <- NA
data <- data.frame(Y=Y,X1=X1,X2=X2,X3=X3,X4=X4,X5=X5,X6=X6)
# Create input dataset using the ?gbm example
N <- 1000
X1 <- runif(N)
X2 <- 2*runif(N)
X3 <- ordered(sample(letters[1:4],N,replace=TRUE),levels=letters[4:1])
X4 <- factor(sample(letters[1:6],N,replace=TRUE))
X5 <- factor(sample(letters[1:3],N,replace=TRUE))
X6 <- 3*runif(N)
mu <- c(-1,0,1,2)[as.numeric(X3)]
SNR <- 10 # signal-to-noise ratio
Y <- X1**1.5 + 2 * (X2**.5) + mu
sigma <- sqrt(var(Y)/SNR)
Y <- Y + rnorm(N,0,sigma)
X1[sample(1:N,size=500)] <- NA
X4[sample(1:N,size=300)] <- NA
gbm.data <- data.frame(Y=Y,X1=X1,X2=X2,X3=X3,X4=X4,X5=X5,X6=X6)
# Fit lm model to mtcars dataset
model <- gbm(Y ~ X1 + X2, data = gbm.data, keep.data = FALSE)
model
plot(model)
summary(model)
# Save model object to disk as .rds object
write_rds(model, "data/GBM model object.rds")
# Save model object to disk as .rds object
saveRDS(model, "data/GBM model object.rds")
?data
# Save model object to disk as .rds object
saveRDS(model, "data/GBM_model_object.rds")
# Save model object to disk as .rda object
save(model, "data/GBM_model_object.rda")
?save
# Save model object to disk as .rda object
save(model, file = "data/GBM_model_object.rda")
rm(model)
load("data/GBM_model_object.rda")
ls()
# Save model object to disk as .rda object
save(fitted_model, file = "data/fitted_model")
# Fit lm model to mtcars dataset
fitted_model <- gbm(Y ~ X1 + X2, data = gbm.data, keep.data = FALSE)
# Save model object to disk as .rda object
save(fitted_model, file = "data/fitted_model")
# Save model object to disk as .rda object
save(fitted_model, file = "data/fitted_model.rda")
packrat:status()
library(exampleR)
input = c(X1 = 1, X2 = 3)
input
as.data.frame(input)
devtools::use_package("gbm")
library(devtools)
packrat::set_opts(vcs.ignore.src = TRUE)
library(devtools)
packrat::disable()
library(devtools)
document()
library(exampleR)
?predictModel
mydata <- data.frame(
X1=runif(3),
X2=runif(3)
)
predictModel(mydata)
predictModel
?predictModel
>predict.fvm
?predict.gbm
fitted_model
ntrees(fitted_model)
fitted_model$trees
fitted_model$n.trees
library(exampleR)
mydata <- data.frame(
X1=runif(3),
X2=runif(3)
)
predictModel(mydata)
mydata
X2=2*runif(3)
library(exampleR)
document()
library(exampleR)
mydata <- data.frame(
X1=runif(3),
X2=runif(3)
)
predictModel(mydata)
mydata <- data.frame(
X1=runif(3),
X2=2*runif(3)
)
predictModel(mydata)
mydata
document()
library(exampleR)
predictModel(c(0.5, 1.5))
predictModel(data.frame(X1=0.5, X2=1.5))
fitted_model
str(fitted_model)
